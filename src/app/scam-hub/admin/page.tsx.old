// src/app/scam-hub/admin/page.tsx
import { supabaseServer } from '@/lib/supabase';
import AdminActions from './AdminActions.tsx.old';

export const dynamic = 'force-dynamic'; // ensure fresh data on each load

// Server action: calls the payout worker safely (secret stays on server)
async function SendRewardsAction() {
  'use server';
  const base = process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000';
  await fetch(`${base}/api/scam-hub/payout`, {
    method: 'POST',
    headers: { 'x-payout-secret': process.env.PAYOUT_SECRET! },
    cache: 'no-store',
  }).catch(() => {});
}

export default async function AdminPage({
  searchParams,
}: {
  searchParams: { key?: string };
}) {
  // simple guard: require ?key=...
  if (searchParams?.key !== process.env.ADMIN_KEY) {
    return (
      <main className="max-w-4xl mx-auto p-6">
        <h1 className="text-xl font-semibold">Admin</h1>
        <p>Invalid admin key.</p>
      </main>
    );
  }

  const { data: posts } = await supabaseServer()
    .from('posts')
    .select('*')
    .eq('status', 'pending')
    .order('created_at', { ascending: false });

  return (
    <main className="max-w-4xl mx-auto p-6 space-y-4">
      <div className="flex items-center justify-between">
        <h1 className="text-2xl font-bold">Admin â€“ Pending Posts</h1>

        {/* NEW: Send Rewards button */}
        <form action={SendRewardsAction}>
          <button className="px-3 py-1 rounded bg-purple-600 text-white">
            Send Rewards
          </button>
        </form>
      </div>

      {!posts?.length && <p>No pending posts.</p>}

      {posts?.map((p) => (
        <div key={p.id} className="rounded border p-4">
          <div className="text-xs text-gray-500">
            {new Date(p.created_at).toLocaleString()}
          </div>
          <div className="font-semibold">{p.title}</div>
          <div className="text-sm text-gray-700">{p.summary}</div>
          <AdminActions
  postId={String(p.id)}
  
  adminKey={searchParams?.key ?? ''}
/>

        </div>
      ))}
    </main>
  );
}
